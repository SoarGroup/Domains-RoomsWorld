/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _sync_debug_t_h
#define _sync_debug_t_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _sync_debug_t sync_debug_t;
struct _sync_debug_t
{
    int64_t    rx_utime;
    int64_t    sensor_time;
    int64_t    estimated_utime;
};
 
sync_debug_t   *sync_debug_t_copy(const sync_debug_t *p);
void sync_debug_t_destroy(sync_debug_t *p);

typedef struct _sync_debug_t_subscription_t sync_debug_t_subscription_t;
typedef void(*sync_debug_t_handler_t)(const lcm_recv_buf_t *rbuf, 
             const char *channel, const sync_debug_t *msg, void *user);

int sync_debug_t_publish(lcm_t *lcm, const char *channel, const sync_debug_t *p);
sync_debug_t_subscription_t* sync_debug_t_subscribe(lcm_t *lcm, const char *channel, sync_debug_t_handler_t f, void *userdata);
int sync_debug_t_unsubscribe(lcm_t *lcm, sync_debug_t_subscription_t* hid);
int sync_debug_t_subscription_set_queue_capacity(sync_debug_t_subscription_t* subs, 
                              int num_messages);


int  sync_debug_t_encode(void *buf, int offset, int maxlen, const sync_debug_t *p);
int  sync_debug_t_decode(const void *buf, int offset, int maxlen, sync_debug_t *p);
int  sync_debug_t_decode_cleanup(sync_debug_t *p);
int  sync_debug_t_encoded_size(const sync_debug_t *p);

// LCM support functions. Users should not call these
int64_t __sync_debug_t_get_hash(void);
int64_t __sync_debug_t_hash_recursive(const __lcm_hash_ptr *p);
int     __sync_debug_t_encode_array(void *buf, int offset, int maxlen, const sync_debug_t *p, int elements);
int     __sync_debug_t_decode_array(const void *buf, int offset, int maxlen, sync_debug_t *p, int elements);
int     __sync_debug_t_decode_array_cleanup(sync_debug_t *p, int elements);
int     __sync_debug_t_encoded_array_size(const sync_debug_t *p, int elements);
int     __sync_debug_t_clone_array(const sync_debug_t *p, sync_debug_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
